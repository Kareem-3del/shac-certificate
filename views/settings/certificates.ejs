<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Certificate Management - SHA</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            font-family: "Inter", sans-serif;
        }
        .animate-fade-in {
            animation: fadeIn 0.8s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-gray-50 to-gray-100 min-h-screen">
    <!-- Navigation Header -->
    <nav class="bg-white shadow-lg border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/settings" class="flex items-center text-gray-600 hover:text-gray-900">
                        <i class="fas fa-arrow-left mr-2"></i>
                        <span>Back to Settings</span>
                    </a>
                    <div class="ml-6">
                        <h1 class="text-xl font-semibold text-gray-900">Certificate Management</h1>
                    </div>
                </div>
                
                <div class="flex items-center space-x-4">
                    <span class="text-sm text-gray-500">Total: <span id="certificateCount" class="font-semibold">0</span></span>
                    <a href="/" class="text-gray-600 hover:text-gray-900 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                        <i class="fas fa-home mr-1"></i>Dashboard
                    </a>
                    <a href="/auth/logout" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        <i class="fas fa-sign-out-alt mr-1"></i>Logout
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Actions Bar -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-8 animate-fade-in">
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0">
                <div class="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
                    <div class="relative">
                        <input type="text" id="searchInput" 
                               class="w-full sm:w-96 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" 
                               placeholder="Search certificates by name, email, or ID...">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-search text-gray-400"></i>
                        </div>
                    </div>
                    <select id="filterType" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                        <option value="all">All Certificates</option>
                        <option value="recent">Recent (30 days)</option>
                        <option value="expired">Expired</option>
                        <option value="active">Active</option>
                    </select>
                </div>
                
                <div class="flex space-x-3">
                    <button id="bulkDeleteBtn" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors disabled:opacity-50" disabled>
                        <i class="fas fa-trash mr-2"></i>Delete Selected
                    </button>
                    <a href="/certificates/export/all" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        <i class="fas fa-download mr-2"></i>Export All
                    </a>
                    <button id="refreshBtn" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        <i class="fas fa-refresh mr-2"></i>Refresh
                    </button>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8 animate-fade-in">
            <div class="bg-white rounded-xl shadow-lg p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-gray-500 text-sm font-medium">Total Certificates</h3>
                        <p class="text-3xl font-bold text-blue-600" id="totalCerts">0</p>
                    </div>
                    <div class="bg-blue-100 p-3 rounded-full">
                        <i class="fas fa-certificate text-blue-600 text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-lg p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-gray-500 text-sm font-medium">This Month</h3>
                        <p class="text-3xl font-bold text-green-600" id="monthlyStats">0</p>
                    </div>
                    <div class="bg-green-100 p-3 rounded-full">
                        <i class="fas fa-calendar-alt text-green-600 text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-lg p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-gray-500 text-sm font-medium">Active</h3>
                        <p class="text-3xl font-bold text-purple-600" id="activeStats">0</p>
                    </div>
                    <div class="bg-purple-100 p-3 rounded-full">
                        <i class="fas fa-check-circle text-purple-600 text-xl"></i>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-xl shadow-lg p-6">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-gray-500 text-sm font-medium">Expired</h3>
                        <p class="text-3xl font-bold text-orange-600" id="expiredStats">0</p>
                    </div>
                    <div class="bg-orange-100 p-3 rounded-full">
                        <i class="fas fa-exclamation-triangle text-orange-600 text-xl"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Certificates Table -->
        <div class="bg-white rounded-xl shadow-lg overflow-hidden animate-fade-in">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-800">Certificates</h3>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <input type="checkbox" id="selectAll" class="rounded">
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Certificate</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Recipient</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Issued</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Expires</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="certificatesTableBody" class="bg-white divide-y divide-gray-200">
                        <!-- Certificates will be loaded here -->
                    </tbody>
                </table>
            </div>
            
            <div id="loadingSpinner" class="flex justify-center items-center py-12">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                <span class="ml-2 text-gray-600">Loading certificates...</span>
            </div>
            
            <div id="emptyState" class="hidden text-center py-12">
                <i class="fas fa-certificate text-gray-400 text-4xl mb-4"></i>
                <p class="text-gray-500">No certificates found</p>
            </div>
        </div>

        <!-- Pagination -->
        <div id="paginationContainer" class="mt-8 flex justify-center"></div>
    </div>

    <!-- Certificate Details Modal -->
    <div id="certificateModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
        <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-lg font-semibold text-gray-900">Certificate Details</h3>
                    <button id="closeModal" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <div id="certificateDetails" class="space-y-4">
                    <!-- Certificate details will be loaded here -->
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentPage = 0;
        const itemsPerPage = 20;
        let totalCertificates = 0;
        let allCertificates = [];
        let filteredCertificates = [];
        let selectedCertificates = new Set();

        document.addEventListener('DOMContentLoaded', function() {
            loadCertificates();
            initializeEventListeners();
        });

        function initializeEventListeners() {
            // Search functionality
            document.getElementById('searchInput').addEventListener('input', debounce(filterCertificates, 300));
            
            // Filter functionality
            document.getElementById('filterType').addEventListener('change', filterCertificates);
            
            // Bulk actions
            document.getElementById('selectAll').addEventListener('change', toggleSelectAll);
            document.getElementById('bulkDeleteBtn').addEventListener('click', bulkDeleteCertificates);
            document.getElementById('refreshBtn').addEventListener('click', loadCertificates);
            
            // Modal
            document.getElementById('closeModal').addEventListener('click', closeModal);
        }

        async function loadCertificates() {
            showLoading();
            
            try {
                const response = await fetch('/certificates?limit=10000&offset=0');
                const data = await response.json();
                
                allCertificates = data.certificates || [];
                totalCertificates = data.total || 0;
                filteredCertificates = [...allCertificates];
                
                updateStats();
                renderCertificates();
                hideLoading();
                
            } catch (error) {
                console.error('Error loading certificates:', error);
                showEmptyState();
                hideLoading();
            }
        }

        function updateStats() {
            document.getElementById('certificateCount').textContent = totalCertificates;
            document.getElementById('totalCerts').textContent = totalCertificates;
            
            // Calculate monthly stats (certificates from last 30 days)
            const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);
            const monthlyCount = allCertificates.filter(cert => 
                new Date(cert.created_at) > thirtyDaysAgo
            ).length;
            document.getElementById('monthlyStats').textContent = monthlyCount;
            
            // Calculate active certificates (not expired)
            const now = new Date();
            const activeCount = allCertificates.filter(cert => 
                new Date(cert.express) > now
            ).length;
            document.getElementById('activeStats').textContent = activeCount;
            
            // Calculate expired certificates
            const expiredCount = totalCertificates - activeCount;
            document.getElementById('expiredStats').textContent = expiredCount;
        }

        function filterCertificates() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const filterType = document.getElementById('filterType').value;
            const now = new Date();
            const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);
            
            filteredCertificates = allCertificates.filter(cert => {
                // Apply search filter
                const matchesSearch = !searchTerm || 
                    cert.name.toLowerCase().includes(searchTerm) ||
                    cert.email.toLowerCase().includes(searchTerm) ||
                    cert.id.toLowerCase().includes(searchTerm);
                
                // Apply type filter
                let matchesType = true;
                switch(filterType) {
                    case 'recent':
                        matchesType = new Date(cert.created_at) > thirtyDaysAgo;
                        break;
                    case 'expired':
                        matchesType = new Date(cert.express) < now;
                        break;
                    case 'active':
                        matchesType = new Date(cert.express) > now;
                        break;
                    default:
                        matchesType = true;
                }
                
                return matchesSearch && matchesType;
            });
            
            currentPage = 0;
            renderCertificates();
        }

        function renderCertificates() {
            const tbody = document.getElementById('certificatesTableBody');
            const startIndex = currentPage * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;
            const certificatesToShow = filteredCertificates.slice(startIndex, endIndex);
            
            if (certificatesToShow.length === 0) {
                showEmptyState();
                return;
            }
            
            tbody.innerHTML = certificatesToShow.map(cert => {
                const isExpired = new Date(cert.express) < new Date();
                const statusClass = isExpired ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800';
                const statusText = isExpired ? 'Expired' : 'Active';
                
                return `
                    <tr class="hover:bg-gray-50">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <input type="checkbox" class="certificate-checkbox rounded" value="${cert.id}">
                        </td>
                        <td class="px-6 py-4">
                            <div class="flex items-center">
                                <i class="fas fa-certificate text-blue-500 mr-2"></i>
                                <div>
                                    <div class="text-sm font-medium text-gray-900">${cert.id}</div>
                                    <div class="text-sm text-gray-500">${cert.type || 'Certificate'}</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4">
                            <div>
                                <div class="text-sm font-medium text-gray-900">${cert.name}</div>
                                <div class="text-sm text-gray-500">${cert.email}</div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                            ${cert.training_center_name || 'N/A'}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            ${new Date(cert.issued).toLocaleDateString()}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            ${new Date(cert.express).toLocaleDateString()}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClass}">
                                ${statusText}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                            <button onclick="viewCertificate('${cert.id}')" class="text-blue-600 hover:text-blue-900">
                                <i class="fas fa-eye mr-1"></i>View
                            </button>
                            <button onclick="renewCertificate('${cert.id}')" class="text-green-600 hover:text-green-900">
                                <i class="fas fa-sync-alt mr-1"></i>Renew
                            </button>
                            <button onclick="deleteCertificate('${cert.id}')" class="text-red-600 hover:text-red-900">
                                <i class="fas fa-trash mr-1"></i>Delete
                            </button>
                        </td>
                    </tr>
                `;
            }).join('');
            
            // Add event listeners for checkboxes
            document.querySelectorAll('.certificate-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', updateBulkActions);
            });
            
            renderPagination();
        }

        function renderPagination() {
            const container = document.getElementById('paginationContainer');
            const totalPages = Math.ceil(filteredCertificates.length / itemsPerPage);
            
            if (totalPages <= 1) {
                container.innerHTML = '';
                return;
            }
            
            let paginationHTML = '<div class="flex space-x-2">';
            
            // Previous button
            paginationHTML += `
                <button onclick="changePage(${currentPage - 1})" 
                        class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 ${currentPage === 0 ? 'opacity-50 cursor-not-allowed' : ''}"
                        ${currentPage === 0 ? 'disabled' : ''}>
                    Previous
                </button>
            `;
            
            // Page numbers
            for (let i = 0; i < totalPages; i++) {
                if (i === currentPage) {
                    paginationHTML += `<span class="px-3 py-2 text-sm font-medium text-white bg-blue-600 border border-blue-600 rounded-md">${i + 1}</span>`;
                } else {
                    paginationHTML += `<button onclick="changePage(${i})" class="px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">${i + 1}</button>`;
                }
            }
            
            // Next button
            paginationHTML += `
                <button onclick="changePage(${currentPage + 1})" 
                        class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 ${currentPage === totalPages - 1 ? 'opacity-50 cursor-not-allowed' : ''}"
                        ${currentPage === totalPages - 1 ? 'disabled' : ''}>
                    Next
                </button>
            `;
            
            paginationHTML += '</div>';
            container.innerHTML = paginationHTML;
        }

        function changePage(page) {
            if (page < 0 || page >= Math.ceil(filteredCertificates.length / itemsPerPage)) return;
            currentPage = page;
            renderCertificates();
        }

        function toggleSelectAll(event) {
            const checkboxes = document.querySelectorAll('.certificate-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.checked = event.target.checked;
            });
            updateBulkActions();
        }

        function updateBulkActions() {
            const checkedBoxes = document.querySelectorAll('.certificate-checkbox:checked');
            const bulkDeleteBtn = document.getElementById('bulkDeleteBtn');
            
            bulkDeleteBtn.disabled = checkedBoxes.length === 0;
            selectedCertificates = new Set(Array.from(checkedBoxes).map(cb => cb.value));
        }

        async function viewCertificate(id) {
            try {
                const response = await fetch(`/certificates/verify/${id}`);
                // Implementation would show certificate details in modal
                console.log('Viewing certificate:', id);
            } catch (error) {
                console.error('Error viewing certificate:', error);
            }
        }

        async function renewCertificate(id) {
            if (!confirm('Are you sure you want to renew this certificate?')) return;
            
            try {
                const response = await fetch(`/certificates/renew/${id}`, { method: 'POST' });
                if (response.ok) {
                    alert('Certificate renewed successfully');
                    loadCertificates();
                } else {
                    throw new Error('Failed to renew certificate');
                }
            } catch (error) {
                console.error('Error renewing certificate:', error);
                alert('Error renewing certificate');
            }
        }

        async function deleteCertificate(id) {
            if (!confirm('Are you sure you want to delete this certificate? This action cannot be undone.')) return;
            
            try {
                const response = await fetch(`/certificates/${id}`, { method: 'DELETE' });
                if (response.ok) {
                    alert('Certificate deleted successfully');
                    loadCertificates();
                } else {
                    throw new Error('Failed to delete certificate');
                }
            } catch (error) {
                console.error('Error deleting certificate:', error);
                alert('Error deleting certificate');
            }
        }

        async function bulkDeleteCertificates() {
            if (selectedCertificates.size === 0) return;
            
            if (!confirm(`Are you sure you want to delete ${selectedCertificates.size} certificates? This action cannot be undone.`)) return;
            
            const promises = Array.from(selectedCertificates).map(id => 
                fetch(`/certificates/${id}`, { method: 'DELETE' })
            );
            
            try {
                await Promise.all(promises);
                alert(`${selectedCertificates.size} certificates deleted successfully`);
                selectedCertificates.clear();
                loadCertificates();
            } catch (error) {
                console.error('Error bulk deleting certificates:', error);
                alert('Error deleting some certificates');
            }
        }

        function showLoading() {
            document.getElementById('loadingSpinner').classList.remove('hidden');
            document.getElementById('certificatesTableBody').innerHTML = '';
            document.getElementById('emptyState').classList.add('hidden');
        }

        function hideLoading() {
            document.getElementById('loadingSpinner').classList.add('hidden');
        }

        function showEmptyState() {
            document.getElementById('emptyState').classList.remove('hidden');
            document.getElementById('certificatesTableBody').innerHTML = '';
        }

        function closeModal() {
            document.getElementById('certificateModal').classList.add('hidden');
        }

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
    </script>
</body>
</html>